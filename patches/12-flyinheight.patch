---
 src/functions.hpp         |    1 +
 src/initPlayerLocal.sqf   |    3 ++-
 src/refreshFlyActions.sqf |   35 +++++++++++++++++++++++++++++++++++
 3 files changed, 38 insertions(+), 1 deletion(-)

--- a/src/functions.hpp
+++ b/src/functions.hpp
@@ -258,5 +258,6 @@
         class resourceTaxes {file="resourceTaxes.sqf";};
         class sleepUntil {file="sleepUntil.sqf";};
         class isMilitaryBuilding {file="isMilitaryBuilding.sqf";};
+        class refreshFlyActions {file="refreshFlyActions.sqf";};
 	}
 }
--- a/src/initPlayerLocal.sqf
+++ b/src/initPlayerLocal.sqf
@@ -660,10 +660,11 @@
 petros disableAI "AUTOTARGET";
 petros addAction ["Mission Request", {nul=CreateDialog "mission_menu";},nil,0,false,true,"","_this == theBoss"];
 
-["itemAdd", ["A3A_ACECargoPlayerInit", {
+["itemAdd", ["A3A_PlayerGroupActions", {
 	[] spawn {
 		{
 			[_x] call A3A_fnc_refreshCargoActions;
+			[_x] call A3A_fnc_refreshFlyActions;
 		} forEach ((units player) - [player]);
 	};
 }, 15]] call BIS_fnc_loop;
--- /dev/null
+++ b/src/refreshFlyActions.sqf
@@ -0,0 +1,35 @@
+params ["_unit"];
+
+if (isNull _unit) exitWith {
+  diag_log format ["Greenfork: refreshFlyOrders: _unit is null"];
+  false;
+};
+
+private _flyInHeightActions = _unit getVariable ["A3A_FlyInHeightActions", []];
+
+{
+  private _actionId = _x select 0;
+  _unit removeAction _actionId;
+} forEach _flyInHeightActions;
+
+_flyInHeightActions = [];
+
+{
+  private _actionId = _unit addAction [
+    format ["Fly at %1m AGL", _x],
+    {
+      params ["_target", "_caller", "_actionId", "_args"];
+      (vehicle _target) flyInHeight (_args select 0);
+    },
+    [_x],
+    3,
+    false,
+    false,
+    "",
+    "vehicle _target isKindOf ""Air""",
+    0
+  ];
+  _flyInHeightActions pushBack [_actionId];
+} forEach [0, 15, 50, 250, 600, 1200, 2500, 8000];
+
+_unit setVariable ["A3A_FlyInHeightActions", _flyInHeightActions];
\ No newline at end of file
